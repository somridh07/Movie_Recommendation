# -*- coding: utf-8 -*-
"""Ajinkya_m.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11MAqpsFCOBaD37F8RPX9IfKwja25FEWt
"""

import numpy as np
import pandas as pd
from xgboost import XGBClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score,confusion_matrix,classification_report

df = pd.read_csv("/content/movies.csv")
df2 = pd.read_csv("/content/ratings.csv")
df

df2

df3 = pd.merge(df,df2,on="movieId",how="inner")
df3

df3.isnull().sum()

df3 = df3.drop_duplicates()
df3.head()

from sklearn.pipeline import Pipeline
from sklearn.preprocessing import StandardScaler,LabelEncoder
from sklearn.compose import ColumnTransformer
from xgboost import XGBClassifier
from sklearn.metrics import classification_report

Label_Encoder = {}
for col in ['genres','userId','movieId','title']:
  Label = LabelEncoder()
  df3[col] = Label.fit_transform(df3[col])
  Label_Encoder[col] = Label

x = df3.drop('rating',axis=1)
y = df3['rating']

X_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)

y_train = y_train.astype('int')
y_test = y_test.astype('int')

pipeline = Pipeline([
    ('scaler', StandardScaler()),
    ('classifier', XGBClassifier(
        n_estimators=100,
        max_depth=5,
        learning_rate=0.1,
        random_state=42,
        use_label_encoder=False,
        eval_metric='logloss'
    ))
])

pipeline.fit(X_train,y_train)

y_pred = pipeline.predict(X_test)

# Evaluate the model
print(classification_report(y_test, y_pred))